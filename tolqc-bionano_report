#!/usr/bin/env perl

use strict;
use warnings;

use File::Temp qw/ tempfile tempdir /;
use JSON;
use File::Basename;

my $bionano_json = `for dir in \`find -L $ENV{TOLQCROOT}/data -mindepth 4 -maxdepth 4 -type d -name genomic_data\`; do find -L \$dir -mindepth 3 -maxdepth 3 -type f -iname "*.cmap.gz" -o -iname "*.bnx.gz"; done | bionano2json -p`;

my $accessions = load_accessions();
my $bionano = decode_json($bionano_json);
my $bionano_update;
foreach my $rec (@$bionano)
{
    if (exists $$accessions{$$rec{input}})
    {
        $$rec{analysis_accession} = $$accessions{$$rec{input}}->{analysis};
        $$rec{sample_accession} = $$accessions{$$rec{input}}->{sample};
        $$rec{study_accession} = $$accessions{$$rec{input}}->{study};
    }
    push @{$bionano_update}, $rec;
}
$bionano_json = encode_json($bionano_update);
write_file_to_s3($bionano_json,qq[s3://tolqc/bionano/data.json]);

my ($fh, $filename) = tempfile();
print $fh (qq[
<!DOCTYPE html>
<html lang="en">
    <head>
        <base href="https://tolqc.cog.sanger.ac.uk/">
        <meta charset="utf-8">
        <title>Tree of Life QC: BioNano Report</title>
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/cosmo/bootstrap.min.css" media="screen">
        <link rel="stylesheet" href="https://bootswatch.com/_assets/css/custom.min.css">
        <link rel="stylesheet" href="https://unpkg.com/bootstrap-table\@1.18.3/dist/bootstrap-table.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/5.3.0/ekko-lightbox.css">
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">

        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js" integrity="sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/5.3.0/ekko-lightbox.min.js"></script>

        <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin\@1.10.21/tableExport.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table\@1.18.3/dist/bootstrap-table.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table\@1.18.3/dist/extensions/export/bootstrap-table-export.min.js"></script>
        <script src="https://unpkg.com/bootstrap-table\@1.18.3/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>

        <script src="https://bootswatch.com/_assets/js/custom.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/ekko-lightbox/5.3.0/ekko-lightbox.min.js"></script>

    </head>
    <body>
        <div class="navbar navbar-expand-lg fixed-top navbar-dark bg-primary">
            <div class="container-fluid">
                <a href="/" class="navbar-brand">Tree of Life QC</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </div>


        <div class="container-fluid">
             <div class="page-header" id="banner">
                <div class="row">
                    <div class="col-lg-8 col-md-7 col-sm-6">
                        <h1>BioNano run report</h1>
                    </div>
                </div>
            </div>

            <div class="section" id="bionano">
                <div class="bionanotoolbar">
                    <button id="button" class="btn btn-secondary">show all plots</button>
                    <button id="button2" class="btn btn-secondary">hide all plots</button>
                </div>
                <table id="bionano_table" class="table table-sm"
                        data-url="bionano/data.json"
                        data-show-export="true"
                        data-export-data-type="all"
                        data-export-types=['json','xml','csv','txt','excel']
                        data-pagination="true"
                        data-search="true"
                        data-sort-name="date"
                        data-search-align="left"
                        data-buttons-align="left"
                        data-toggle="table"
                        data-show-toggle="true"
                        data-show-columns="true"
                        data-show-columns-toggle-all="true"
                        data-sort-order="desc"
                        data-toolbar=".bionanotoolbar"
                        data-toolbar-align="right"
                        data-filter-control="true">
                    <thead>
                        <tr>
                            <th data-field="group" data-sortable="true" data-filter-control="select">group</th>
                            <th data-field="specimen" data-sortable="true" data-filter-control="input">specimen</th>
                            <th data-field="platform" data-sortable="true" data-filter-control="select">platform</th>
                            <th data-field="model" data-sortable="true" data-filter-control="select">model</th>
                            <th data-field="type" data-sortable="true" data-filter-control="select">file type</th>
                            <th data-field="sample_accession" data-sortable="true" data-formatter="biosample_formatter" data-filter-control="input">sample accession</th>
                            <th data-field="analysis_accession" data-sortable="true" data-formatter="ena_formatter" data-filter-control="input">analysis accession</th>
                            <th data-field="study_accession" data-sortable="true" data-formatter="ena_formatter" data-visible="false" data-filter-control="input">study accession</th>
                            <th data-field="species" data-sortable="true" data-formatter="species_link_formatter" data-filter-control="input">species</th>
                        </tr>
                    </thead>
                </table>
            </div>

            <hr/>

            <div class="footer">
                    <a href="https://www.sanger.ac.uk/"><img style="float:right; height:50px" src="https://imputation.sanger.ac.uk/www/images/sanger_logo.png" class="img-responsive" alt="WTSI"></a>
                    <p class="copyright">Tree of Life Species Report is developed within the <a href="https://www.sanger.ac.uk/programme/tree-of-life/">Tree of Life Programme</a>
                    at the <a href="https://www.sanger.ac.uk/">Wellcome Sanger Institute</a><br />
                    Copyright &copy; 2020 Genome Research Limited (reg no. 2742969) is a charity registered in England with number 1021457.<br />
                    <a href="http://www.sanger.ac.uk/legal/">Terms and conditions</a> | <a href="http://www.sanger.ac.uk/legal/cookiespolicy.html">Cookies policy</a>.
            </div>
        </div>

        <script type="text/javascript">

        \$(document).on('click', '[data-toggle="lightbox"]', function(event) {
            event.preventDefault();
            \$(this).ekkoLightbox();
        });

        function taxon_link_formatter(value, row) {
            return '<a href="https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?mode=Info&id='+value+'">'+value+'</a>';
        }

        function species_link_formatter(value, row) {
            if (value) {
                var _name = value.replace(/ /g, "_");
                return '<i><a href="'+row.group+'/'+_name+'/">'+value+'</a></i>';
            } else {
                return value;
            }
        }

        function illumina_image_formatter(index, row) {
            var illumina_plots = '';
            var x;
            for (x in row) {
                if (x.match(/^plot/)) {
                    var img = encodeURIComponent(row[x]);
                    illumina_plots += '<a href="'+img+'" data-toggle="lightbox" data-title="'+row.type+' '+row.specimen+' samtools stats plots" data-toggle="lightbox" data-gallery="illumina'+index+'"><img src="'+img+'" height="75px"></a>';
                }
            }
            return illumina_plots;
        }
        function illumina_cell_status_style(value, row, index) {
            if (row.npg_qc_status)
            {
                if (row.npg_qc_status==0) {
                    return {
                        classes: 'bg-danger'
                    }
                }
                return {
                    classes: 'bg-success'
                }
            }
            return {
                classes: 'bg-success'
            }
        }
        function gs_rep_formatter(value, row) {
            var rep = value>0 ? 100*value/row.max.len : 0;
            return dec2_formatter(rep);
        }
        function local_formatter(value) {
            return value.toLocaleString();
        }
        function dec2_formatter(value) {
            return parseFloat(value).toFixed(2);
        }
        function info_formatter(value) {
            return '<strong>' + value + '</strong>';
        }
        function illumina_run_formatter(value) {
            var run = value.match(/^[0-9]+/);
            return '<a href="http://sfweb.internal.sanger.ac.uk:9000/perl/npg/run/'+run+'">'+value+'</a>';
        }
        function species_link_formatter(value, row) {
            if (value) {
                var _name = value.replace(/ /g, "_");
                return '<i><a href="'+row.group+'/'+_name+'/">'+value+'</a></i>';
            }
            return value;
        }
        function biosample_formatter(value) {
            if (value) {
                if (value.match(/^SAM/)) {
                    return '<a href="https://www.ebi.ac.uk/biosamples/samples/'+value+'">'+value+'</a>';
                }
                return value;
            }
            return "";
        }
        function ena_formatter(value) {
            if (value) {
                if (value.match(/^[SE]RR/)) {
                    return '<a href="https://www.ebi.ac.uk/ena/browser/view/'+value+'">'+value+'</a>';
                }
                return value;
            }
            return "";
        }
        function cellStyle(value, row, index) {
            if (row.match && row.species_name)
            {
                var species_lims = row.species_name;
                var taxonomicidentification = row.match[0].taxonomicidentification;
                if (!species_lims.startsWith(taxonomicidentification) && !taxonomicidentification.startsWith(species_lims)) {
                    return {
                        classes: 'bg-danger'
                    }
                } else if (parseFloat(row.match[0].similarity) < 0.97) {
                    return {
                        classes: 'bg-warning'
                    }
                } else {
                    return {
                        classes: 'bg-success'
                    }
                }
            }
            return {
                classes: 'bg-warning'
            }
        }
        function bold_topmatch_formatter(value, row) {
            if (row.match && row.species_name)
            {
                var species_lims = row.species_name;
                var taxonomicidentification = row.match[0].taxonomicidentification;
                if (!species_lims.startsWith(taxonomicidentification) && !taxonomicidentification.startsWith(species_lims)) {
                    return '<i>'+row.match[0].taxonomicidentification+'</i> ('+parseFloat(row.match[0].similarity).toFixed(2)+')';
                } else if (parseFloat(row.match[0].similarity) < 0.97) {
                    return '<i>'+row.match[0].taxonomicidentification+'</i> ('+parseFloat(row.match[0].similarity).toFixed(2)+')';
                } else {
                    return '<i>'+row.match[0].taxonomicidentification+'</i> ('+parseFloat(row.match[0].similarity).toFixed(2)+')';
                }
            } else {
                return '';
            }
        }

        var \$button = \$('#button')
        var \$button2 = \$('#button2')

        \$(function() {
            \$button.click(function () {
                \$('#illumina_table').bootstrapTable('expandAllRows')
            })
            \$button2.click(function () {
                \$('#illumina_table').bootstrapTable('collapseAllRows')
            })
        })

        </script>
    </body>
</html>
]);
close($fh);

system(qq[s3cmd --quiet --acl-public put $filename s3://tolqc/bionano/index.html]);

exit;

sub write_file_to_s3
{
    my ($json,$file) = @_;
    my ($fh, $jsonfile) = tempfile();
    print $fh $json;
    close($fh);
    system(qq[s3cmd put --quiet --acl-public $jsonfile $file]);
}

sub load_accessions
{
    my $accessions;
    my $fofn = qq[$ENV{TOLQCROOT}/track/tol_bionano_subtrack.tsv];
    open(my $fh, "<$fofn") || die("Could not open file $fofn");
    while(<$fh>)
    {
        chomp;
        my ($file,$analysis,$study,$sample) = split /\t/;
        $file = basename($file);
        $$accessions{$file} = { analysis => $analysis, sample => $sample, study => $study };
    }
    close $fh;
    return $accessions;
}
